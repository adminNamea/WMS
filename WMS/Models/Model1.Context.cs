//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WMSEntities : DbContext
    {
        public WMSEntities()
            : base("name=WMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<WCS_Place> WCS_Place { get; set; }
        public virtual DbSet<WH> WH { get; set; }
        public virtual DbSet<WH_Area> WH_Area { get; set; }
        public virtual DbSet<WH_GoodsAllocation> WH_GoodsAllocation { get; set; }
        public virtual DbSet<WH_Material> WH_Material { get; set; }
        public virtual DbSet<WH_MaterialList> WH_MaterialList { get; set; }
        public virtual DbSet<WH_StorageLocation> WH_StorageLocation { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrder { get; set; }
        public virtual DbSet<WCS_DecomposedCommand> WCS_DecomposedCommand { get; set; }
        public virtual DbSet<WH_Applier> WH_Applier { get; set; }
        public virtual DbSet<WH_Defect> WH_Defect { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
    
        public virtual int AddStorage(string name, string description, string createdBy, string type, string whid, string arid, string storageLocationID, string size, string tempPlate, string z, string x, string y)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var whidParameter = whid != null ?
                new ObjectParameter("Whid", whid) :
                new ObjectParameter("Whid", typeof(string));
    
            var aridParameter = arid != null ?
                new ObjectParameter("Arid", arid) :
                new ObjectParameter("Arid", typeof(string));
    
            var storageLocationIDParameter = storageLocationID != null ?
                new ObjectParameter("StorageLocationID", storageLocationID) :
                new ObjectParameter("StorageLocationID", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var tempPlateParameter = tempPlate != null ?
                new ObjectParameter("TempPlate", tempPlate) :
                new ObjectParameter("TempPlate", typeof(string));
    
            var zParameter = z != null ?
                new ObjectParameter("z", z) :
                new ObjectParameter("z", typeof(string));
    
            var xParameter = x != null ?
                new ObjectParameter("x", x) :
                new ObjectParameter("x", typeof(string));
    
            var yParameter = y != null ?
                new ObjectParameter("y", y) :
                new ObjectParameter("y", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStorage", nameParameter, descriptionParameter, createdByParameter, typeParameter, whidParameter, aridParameter, storageLocationIDParameter, sizeParameter, tempPlateParameter, zParameter, xParameter, yParameter);
        }
    
        public virtual ObjectResult<checkHuo_Result> checkHuo(string storageLocationID, string wHAreaID, string wHID, string tempPlate)
        {
            var storageLocationIDParameter = storageLocationID != null ?
                new ObjectParameter("StorageLocationID", storageLocationID) :
                new ObjectParameter("StorageLocationID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var tempPlateParameter = tempPlate != null ?
                new ObjectParameter("TempPlate", tempPlate) :
                new ObjectParameter("TempPlate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkHuo_Result>("checkHuo", storageLocationIDParameter, wHAreaIDParameter, wHIDParameter, tempPlateParameter);
        }
    
        public virtual int DelAll(string type, string id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelAll", typeParameter, idParameter);
        }
    
        public virtual int UpAll(string iD, string name, string x_intercept, string updatedBy, string updatedTime, string statusID, string y_intercept, string z_intercept, string size, string description, string tempPlate, string storageLocationID, string wHAreaID, string wHID, string createdBy, string createdTime, string type)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var x_interceptParameter = x_intercept != null ?
                new ObjectParameter("x_intercept", x_intercept) :
                new ObjectParameter("x_intercept", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var updatedTimeParameter = updatedTime != null ?
                new ObjectParameter("UpdatedTime", updatedTime) :
                new ObjectParameter("UpdatedTime", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var y_interceptParameter = y_intercept != null ?
                new ObjectParameter("y_intercept", y_intercept) :
                new ObjectParameter("y_intercept", typeof(string));
    
            var z_interceptParameter = z_intercept != null ?
                new ObjectParameter("z_intercept", z_intercept) :
                new ObjectParameter("z_intercept", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var tempPlateParameter = tempPlate != null ?
                new ObjectParameter("TempPlate", tempPlate) :
                new ObjectParameter("TempPlate", typeof(string));
    
            var storageLocationIDParameter = storageLocationID != null ?
                new ObjectParameter("StorageLocationID", storageLocationID) :
                new ObjectParameter("StorageLocationID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdTimeParameter = createdTime != null ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpAll", iDParameter, nameParameter, x_interceptParameter, updatedByParameter, updatedTimeParameter, statusIDParameter, y_interceptParameter, z_interceptParameter, sizeParameter, descriptionParameter, tempPlateParameter, storageLocationIDParameter, wHAreaIDParameter, wHIDParameter, createdByParameter, createdTimeParameter, typeParameter);
        }
    
        public virtual ObjectResult<checkWo_Result> checkWo(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkWo_Result>("checkWo", idParameter);
        }
    
        public virtual ObjectResult<checkKq_Result> checkKq(string wHAreaID, string wHID)
        {
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkKq_Result>("checkKq", wHAreaIDParameter, wHIDParameter);
        }
    
        public virtual ObjectResult<checkkw_Result> checkkw(string storageLocationID, string wHID, string wHAreaID)
        {
            var storageLocationIDParameter = storageLocationID != null ?
                new ObjectParameter("StorageLocationID", storageLocationID) :
                new ObjectParameter("StorageLocationID", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkkw_Result>("checkkw", storageLocationIDParameter, wHIDParameter, wHAreaIDParameter);
        }
    
        public virtual int AddUser(string userName, string employeeName, string pWD, string tel, string type, string id)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", userNameParameter, employeeNameParameter, pWDParameter, telParameter, typeParameter, idParameter);
        }
    }
}
